[{"D:\\demo\\my-react\\src\\index.js":"1","D:\\demo\\my-react\\src\\containers\\register\\register.jsx":"2","D:\\demo\\my-react\\src\\containers\\main\\main.jsx":"3","D:\\demo\\my-react\\src\\containers\\login\\login.jsx":"4","D:\\demo\\my-react\\src\\redux\\store.js":"5","D:\\demo\\my-react\\src\\redux\\reducers.js":"6","D:\\demo\\my-react\\src\\components\\logo\\logo.jsx":"7","D:\\demo\\my-react\\src\\redux\\action-types.js":"8","D:\\demo\\my-react\\src\\redux\\actions.js":"9","D:\\demo\\my-react\\src\\api\\ajax.js":"10","D:\\demo\\my-react\\src\\api\\index.js":"11"},{"size":692,"mtime":1607843126951,"results":"12","hashOfConfig":"13"},{"size":2866,"mtime":1607959142171,"results":"14","hashOfConfig":"13"},{"size":230,"mtime":1607782396460,"results":"15","hashOfConfig":"13"},{"size":1565,"mtime":1607851255797,"results":"16","hashOfConfig":"13"},{"size":350,"mtime":1607783683826,"results":"17","hashOfConfig":"13"},{"size":626,"mtime":1607958164658,"results":"18","hashOfConfig":"13"},{"size":369,"mtime":1607848726116,"results":"19","hashOfConfig":"13"},{"size":204,"mtime":1607957573577,"results":"20","hashOfConfig":"13"},{"size":1429,"mtime":1607959602943,"results":"21","hashOfConfig":"13"},{"size":527,"mtime":1607955743071,"results":"22","hashOfConfig":"13"},{"size":373,"mtime":1607956183630,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1l0qysh",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\demo\\my-react\\src\\index.js",[],["49","50"],"D:\\demo\\my-react\\src\\containers\\register\\register.jsx",[],"D:\\demo\\my-react\\src\\containers\\main\\main.jsx",[],"D:\\demo\\my-react\\src\\containers\\login\\login.jsx",[],"D:\\demo\\my-react\\src\\redux\\store.js",[],"D:\\demo\\my-react\\src\\redux\\reducers.js",[],"D:\\demo\\my-react\\src\\components\\logo\\logo.jsx",[],"D:\\demo\\my-react\\src\\redux\\action-types.js",[],"D:\\demo\\my-react\\src\\redux\\actions.js",["51","52","53"],"// 包含多个action creator 异步action 同步action\r\nimport { reqRegister, reqLogin } from '../api/index'\r\n\r\nimport { AUTH_SUCCESS, ERROR_MSG } from './action-types'\r\n\r\n// 每一个action_types都对应一个同步action\r\n\r\n// 授权成功的action\r\nconst authSuccess=(user)=>({\r\n  type:AUTH_SUCCESS,data:user\r\n})\r\n\r\n// 授权失败的action\r\nconst errorMsg=(msg)=>({\r\n  type:ERROR_MSG,data:msg\r\n})\r\n// 注册异步action\r\nexport const register = (user) => {\r\n  const {username ,password,password2,type}=user\r\n  // 表单验证\r\n  if (password!=password2) {\r\n    return errorMsg('2次密码保持一致')\r\n  }\r\n  return async dispatch => {\r\n    // 发送注册的异步ajax请求\r\n    const response = await reqRegister({username ,password,type})\r\n    if (!response) {\r\n      return\r\n    }\r\n    const res = response.data\r\n    if (res.code == 0) {\r\n      //分发成功的同步action\r\n      dispatch(authSuccess(res.data))\r\n    } else {\r\n      //分发失败的同步action\r\n      dispatch(errorMsg(res.data))\r\n    }\r\n  }\r\n}\r\n\r\n// 登录异步action\r\nexport const login = (user) => {\r\n  return async dispatch => {\r\n    // 发送注册的异步ajax请求\r\n    const res = await reqLogin(user)\r\n    const data = res.data\r\n    if (data.code == 0) {\r\n      //分发成功的同步action\r\n      dispatch(authSuccess(res.data))\r\n    } else {\r\n      //分发失败的同步action\r\n      dispatch(errorMsg(res.data))\r\n    }\r\n  }\r\n}\r\n","D:\\demo\\my-react\\src\\api\\ajax.js",["54","55"],"import axios from 'axios'\r\n\r\nexport default function ajax(url,data={},type='GET') {\r\n  if(type=='GET'){ \r\n    // 原始数据是：{username：Tom，password：123}\r\n    // 格式化的数据：username=Tom&password=123\r\n    let paramStr=''\r\n    Object.key(data).forEach(key=>{\r\n      paramStr+=key+'='+data[key]+'&'\r\n    })\r\n    if (paramStr !='') {\r\n      paramStr=paramStr.substring(0,paramStr.lastIndexOf('&'))\r\n      url=url+'?'+paramStr\r\n    }\r\n    return axios.get(url)\r\n  }else{\r\n    return axios.post(url,data)\r\n  }\r\n}","D:\\demo\\my-react\\src\\api\\index.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":21,"column":15,"nodeType":"62","messageId":"63","endLine":21,"endColumn":17},{"ruleId":"60","severity":1,"message":"64","line":31,"column":18,"nodeType":"62","messageId":"63","endLine":31,"endColumn":20},{"ruleId":"60","severity":1,"message":"64","line":47,"column":19,"nodeType":"62","messageId":"63","endLine":47,"endColumn":21},{"ruleId":"60","severity":1,"message":"64","line":4,"column":10,"nodeType":"62","messageId":"63","endLine":4,"endColumn":12},{"ruleId":"60","severity":1,"message":"61","line":11,"column":18,"nodeType":"62","messageId":"63","endLine":11,"endColumn":20},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]