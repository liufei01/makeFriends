[{"D:\\demo\\my-react\\src\\index.js":"1","D:\\demo\\my-react\\src\\containers\\register\\register.jsx":"2","D:\\demo\\my-react\\src\\containers\\main\\main.jsx":"3","D:\\demo\\my-react\\src\\containers\\login\\login.jsx":"4","D:\\demo\\my-react\\src\\redux\\store.js":"5","D:\\demo\\my-react\\src\\redux\\reducers.js":"6","D:\\demo\\my-react\\src\\components\\logo\\logo.jsx":"7","D:\\demo\\my-react\\src\\redux\\action-types.js":"8","D:\\demo\\my-react\\src\\redux\\actions.js":"9","D:\\demo\\my-react\\src\\api\\ajax.js":"10","D:\\demo\\my-react\\src\\api\\index.js":"11","D:\\demo\\my-react\\src\\containers\\meinv_info\\meinv_info.jsx":"12","D:\\demo\\my-react\\src\\containers\\shuaige_info\\shuaige_info.jsx":"13","D:\\demo\\my-react\\src\\components\\header-selector\\header-selector.jsx":"14","D:\\demo\\my-react\\src\\utils\\index.js":"15","D:\\demo\\my-react\\src\\containers\\shuaige\\shuaige.jsx":"16","D:\\demo\\my-react\\src\\containers\\meinv\\meinv.jsx":"17","D:\\demo\\my-react\\src\\containers\\message\\message.jsx":"18","D:\\demo\\my-react\\src\\components\\not-found\\not-found.jsx":"19","D:\\demo\\my-react\\src\\containers\\personal\\personal.jsx":"20","D:\\demo\\my-react\\src\\components\\nav-footer\\nav-footer.jsx":"21","D:\\demo\\my-react\\src\\components\\user-list\\user-list.jsx":"22","D:\\demo\\my-react\\src\\test\\socketIO_test.js":"23","D:\\demo\\my-react\\src\\containers\\chat\\chat.jsx":"24"},{"size":755,"mtime":1608562857436,"results":"25","hashOfConfig":"26"},{"size":3139,"mtime":1608213105974,"results":"27","hashOfConfig":"26"},{"size":4446,"mtime":1608905369179,"results":"28","hashOfConfig":"26"},{"size":1975,"mtime":1608040776064,"results":"29","hashOfConfig":"26"},{"size":350,"mtime":1607783683826,"results":"30","hashOfConfig":"26"},{"size":1233,"mtime":1608553666349,"results":"31","hashOfConfig":"26"},{"size":369,"mtime":1607848726116,"results":"32","hashOfConfig":"26"},{"size":391,"mtime":1608553415629,"results":"33","hashOfConfig":"26"},{"size":3142,"mtime":1608557323804,"results":"34","hashOfConfig":"26"},{"size":677,"mtime":1608557381811,"results":"35","hashOfConfig":"26"},{"size":510,"mtime":1608558158673,"results":"36","hashOfConfig":"26"},{"size":2069,"mtime":1608381548800,"results":"37","hashOfConfig":"26"},{"size":2057,"mtime":1608298972361,"results":"38","hashOfConfig":"26"},{"size":1070,"mtime":1608467325479,"results":"39","hashOfConfig":"26"},{"size":523,"mtime":1608470828397,"results":"40","hashOfConfig":"26"},{"size":530,"mtime":1608560392295,"results":"41","hashOfConfig":"26"},{"size":528,"mtime":1608561382528,"results":"42","hashOfConfig":"26"},{"size":285,"mtime":1608385752230,"results":"43","hashOfConfig":"26"},{"size":500,"mtime":1608385943181,"results":"44","hashOfConfig":"26"},{"size":1781,"mtime":1608561834632,"results":"45","hashOfConfig":"26"},{"size":1459,"mtime":1608472109785,"results":"46","hashOfConfig":"26"},{"size":1583,"mtime":1608905588803,"results":"47","hashOfConfig":"26"},{"size":536,"mtime":1608899720856,"results":"48","hashOfConfig":"26"},{"size":867,"mtime":1608906684395,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1l0qysh",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\demo\\my-react\\src\\index.js",[],["105","106"],"D:\\demo\\my-react\\src\\containers\\register\\register.jsx",[],"D:\\demo\\my-react\\src\\containers\\main\\main.jsx",["107","108"],"D:\\demo\\my-react\\src\\containers\\login\\login.jsx",[],"D:\\demo\\my-react\\src\\redux\\store.js",[],"D:\\demo\\my-react\\src\\redux\\reducers.js",[],"D:\\demo\\my-react\\src\\components\\logo\\logo.jsx",[],"D:\\demo\\my-react\\src\\redux\\action-types.js",[],"D:\\demo\\my-react\\src\\redux\\actions.js",["109","110","111","112","113"],"// 包含多个action creator 异步action 同步action\r\nimport {\r\n  reqRegister,\r\n  reqLogin,\r\n  reqUpdataUser,\r\n  reqUser,\r\n  reqUserList\r\n} from '../api/index'\r\n\r\nimport {\r\n  AUTH_SUCCESS,\r\n  ERROR_MSG,\r\n  RECEIVE_MSG,\r\n  RESET_USER,\r\n  RECEIVE_USERLIST\r\n} from './action-types'\r\n\r\n// 每一个action_types都对应一个同步action\r\n\r\n// 授权成功的action\r\nconst authSuccess = user => ({\r\n  type: AUTH_SUCCESS,\r\n  data: user\r\n})\r\n\r\n// 授权失败的action\r\nconst errorMsg = msg => ({\r\n  type: ERROR_MSG,\r\n  data: msg\r\n})\r\n// 接收用户的同步action\r\nconst receiveMsg = user => ({\r\n  type: RECEIVE_MSG,\r\n  data: user\r\n})\r\n// 重置用户的同步action\r\nexport const reserMsg = msg => ({\r\n  type: RESET_USER,\r\n  data: msg\r\n})\r\n// 接收用户列表的同步action\r\nexport const receiveUserList = userlist => ({\r\n  type: RECEIVE_USERLIST,\r\n  data: userlist\r\n})\r\n// 注册异步action\r\nexport const register = ({ username, password, password2, type }) => {\r\n  // 进行前台表单验证, 如果不合法返回一个同步 action 对象, 显示提示信息\r\n  if (!username || !password || !type) {\r\n    return errorMsg('用户名密码必须输入')\r\n  }\r\n  if (password !== password2) {\r\n    return errorMsg('密码和确认密码不同')\r\n  }\r\n\r\n  return async dispatch => {\r\n    // 发送注册的异步ajax请求\r\n    const response = await reqRegister({ username, password, type })\r\n    const res = response.data\r\n    if (res.code == 0) {\r\n      //分发成功的同步action\r\n      dispatch(authSuccess(res.data))\r\n    } else {\r\n      //分发失败的同步action\r\n      dispatch(errorMsg(res.msg))\r\n    }\r\n  }\r\n}\r\n\r\n// 登录异步action\r\nexport const login = ({ username, password }) => {\r\n  if (!username || !password) {\r\n    return errorMsg('用户密码必须输入')\r\n  }\r\n  return async dispatch => {\r\n    // 发送注册的异步ajax请求\r\n    const response = await reqLogin({ username, password })\r\n    const res = response.data\r\n    if (res.code == 0) {\r\n      //分发成功的同步action\r\n      dispatch(authSuccess(res.data))\r\n    } else {\r\n      //分发失败的同步action\r\n      dispatch(errorMsg(res.msg))\r\n    }\r\n  }\r\n}\r\n\r\n// 更新用户action\r\nexport const updateUser = user => {\r\n  return async dispath => {\r\n    const response = await reqUpdataUser(user)\r\n    const res = response.data\r\n    if (res.code == 0) {\r\n      // 分发成功的同步action\r\n      dispath(receiveMsg(res.data))\r\n    } else {\r\n      // 分发失败的同步action\r\n      dispath(reserMsg(res.msg))\r\n    }\r\n  }\r\n}\r\n\r\n// 获取用户的action\r\nexport const getUser = () => {\r\n  return async dispath => {\r\n    const response = await reqUser()\r\n    const res = response.data\r\n    if (res.code == 0) {\r\n      // 分发成功的同步\r\n      dispath(receiveMsg(res.data))\r\n    } else {\r\n      dispath(reserMsg(res.msg))\r\n    }\r\n  }\r\n}\r\n// 获取用户列表的action\r\nexport const getUserList = type => {\r\n  return async dispath => {\r\n    const response = await reqUserList(type)\r\n    const res = response.data\r\n    if (res.code == 0) {\r\n      // 分发成功的同步\r\n      dispath(receiveUserList(res.data))\r\n    }\r\n  }\r\n}\r\n","D:\\demo\\my-react\\src\\api\\ajax.js",["114","115"],"import axios from 'axios'\r\n\r\nexport default function ajax (url, data = {}, types = 'GET') {\r\n  if (types == 'GET') {\r\n    // 原始数据是：{username：Tom，password：123}\r\n    // 格式化的数据：username=Tom&password=123\r\n    if (Object.keys(data).length === 0) {\r\n      return axios.get(url)\r\n    } else {\r\n      let paramStr = ''\r\n      Object.key(data).forEach(key => {\r\n        paramStr += key + '=' + data[key] + '&'\r\n      })\r\n      if (paramStr != '') {\r\n        paramStr = paramStr.substring(0, paramStr.lastIndexOf('&'))\r\n        url = url + '?' + paramStr\r\n      }\r\n      return axios.get(url)\r\n    }\r\n  } else {\r\n    return axios.post(url, data)\r\n  }\r\n}\r\n","D:\\demo\\my-react\\src\\api\\index.js",[],"D:\\demo\\my-react\\src\\containers\\meinv_info\\meinv_info.jsx",["116"],"// 帅哥信息完善的路由容器组件\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { NavBar, InputItem, TextareaItem, Button } from 'antd-mobile'\r\nimport HeaderSelector from '../../components/header-selector/header-selector'\r\nimport { updateUser } from '../../redux/actions'\r\n\r\nclass MeiNvInfo extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      header: '',\r\n      waimao: '',\r\n      xueii: '',\r\n      money: '',\r\n      detail: ''\r\n    }\r\n  }\r\n  render () {\r\n    const { header, type } = this.props\r\n    if (header) {\r\n      const path = type == 'meinv' ? '/meinv' : '/shuaige'\r\n      return <Redirect to={path} />\r\n    }\r\n    return (\r\n      <div>\r\n        <NavBar>美女信息完善</NavBar>\r\n        <HeaderSelector setHandleHeader={this.setHandleHeader}></HeaderSelector>\r\n        <InputItem\r\n          placeholder='输入美貌'\r\n          onChange={val => this.handleChange('waimao', val)}\r\n        >\r\n          美貌 ：\r\n        </InputItem>\r\n        <InputItem\r\n          placeholder='输入学历'\r\n          onChange={val => this.handleChange('xueii', val)}\r\n        >\r\n          学历 ：\r\n        </InputItem>\r\n        <InputItem\r\n          placeholder='输入薪资'\r\n          onChange={val => this.handleChange('money', val)}\r\n        >\r\n          薪资 ：\r\n        </InputItem>\r\n        <TextareaItem\r\n          title='交友宣言 ：'\r\n          rows={3}\r\n          clear\r\n          count={200}\r\n          onChange={val => this.handleChange('detail', val)}\r\n        ></TextareaItem>\r\n        <Button type='primary' onClick={this.save}>\r\n          保存\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n  handleChange = (name, val) => {\r\n    this.setState({\r\n      [name]: val\r\n    })\r\n  }\r\n  // 更新header\r\n  setHandleHeader = header => {\r\n    this.setState({\r\n      header\r\n    })\r\n  }\r\n  save = () => {\r\n    this.props.updateUser(this.state)\r\n  }\r\n}\r\n\r\nexport default connect(state => state.user,{updateUser})(MeiNvInfo)\r\n","D:\\demo\\my-react\\src\\containers\\shuaige_info\\shuaige_info.jsx",["117"],"// 帅哥信息完善的路由容器组件\r\nimport React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { NavBar, InputItem, TextareaItem, Button } from 'antd-mobile'\r\nimport HeaderSelector from '../../components/header-selector/header-selector'\r\nimport { updateUser } from '../../redux/actions'\r\n\r\nclass ShuaiGeInfo extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      header: '',\r\n      age: '',\r\n      xueii: '',\r\n      money: '',\r\n      detail: ''\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {header,type}=this.props\r\n    if (header) {\r\n      const path =type=='meinv'?'/meinv':'/shuaige'\r\n      return <Redirect to={path}/>\r\n    }\r\n    return (\r\n      <div>\r\n        <NavBar>帅哥信息完善</NavBar>\r\n        <HeaderSelector setHandleHeader={this.setHandleHeader}></HeaderSelector>\r\n        <InputItem\r\n          placeholder='输入年龄'\r\n          onChange={val => this.handleChange('age', val)}\r\n        >\r\n          年龄 ：\r\n        </InputItem>\r\n        <InputItem\r\n          placeholder='输入学历'\r\n          onChange={val => this.handleChange('xueii', val)}\r\n        >\r\n          学历 ：\r\n        </InputItem>\r\n        <InputItem\r\n          placeholder='输入薪资'\r\n          onChange={val => this.handleChange('money', val)}\r\n        >\r\n          薪资 ：\r\n        </InputItem>\r\n        <TextareaItem\r\n          title='交友宣言 ：'\r\n          rows={3}\r\n          clear\r\n          count={200}\r\n          onChange={val => this.handleChange('detail', val)}\r\n        ></TextareaItem>\r\n        <Button type='primary' onClick={this.save}>\r\n          保存\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n  handleChange = (name, val) => {\r\n    this.setState({\r\n      [name]: val\r\n    })\r\n  }\r\n  // 更新header\r\n  setHandleHeader = header => {\r\n    this.setState({\r\n      header\r\n    })\r\n  }\r\n  save = () => {\r\n    this.props.updateUser(this.state)\r\n  }\r\n}\r\n\r\nexport default connect(state => state.user, { updateUser })(ShuaiGeInfo)\r\n","D:\\demo\\my-react\\src\\components\\header-selector\\header-selector.jsx",["118"],"// 信息页面的头部\r\n\r\nimport React,{ Component } from \"react\";\r\nimport {List ,Grid} from 'antd-mobile'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class HeaderSelector extends Component {\r\n  static propTypes={\r\n    setHandleHeader:PropTypes.func.isRequired\r\n  }\r\n\r\n  state={\r\n    icon:null\r\n  }\r\n  constructor(prop) {\r\n    super(prop)\r\n    this.headerList=[]\r\n    for (let i = 0; i < 20; i++) {\r\n      this.headerList.push({\r\n        text:'头像'+(i+1),\r\n        icon:require(`../../assets/images/头像${i+1}.png`).default\r\n      })\r\n      \r\n    }\r\n  }\r\n  render () {\r\n    // const listHeader='请选择头像'\r\n    // 头部头像\r\n    const {icon}=this.state\r\n    const listHeader=icon? (<div>已选择的头像：<img src={icon} /></div>):'请选择头像'\r\n    return (\r\n      <List renderHeader={()=>listHeader}>\r\n        <Grid data={this.headerList} columnNum={5} onClick={this.headerClick}></Grid>\r\n      </List>\r\n    )\r\n  }\r\n  headerClick=({text,icon})=>{\r\n    this.setState({\r\n      icon\r\n    })\r\n    this.props.setHandleHeader(text)\r\n\r\n  }\r\n}","D:\\demo\\my-react\\src\\utils\\index.js",[],"D:\\demo\\my-react\\src\\containers\\shuaige\\shuaige.jsx",[],"D:\\demo\\my-react\\src\\containers\\meinv\\meinv.jsx",[],"D:\\demo\\my-react\\src\\containers\\message\\message.jsx",[],"D:\\demo\\my-react\\src\\components\\not-found\\not-found.jsx",[],"D:\\demo\\my-react\\src\\containers\\personal\\personal.jsx",[],"D:\\demo\\my-react\\src\\components\\nav-footer\\nav-footer.jsx",["119","120"],"/**\r\n * 底部导航列表\r\n */\r\nimport React, { Component } from 'react'\r\nimport { TabBar } from 'antd-mobile'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom' //希望在非路由组件中使用路由库的API\r\n\r\nconst Item = TabBar.Item\r\n\r\nclass Navfooter extends Component {\r\n  static propTypes = {\r\n    navList: PropTypes.array.isRequired\r\n  }\r\n  render () {\r\n    let { navList } = this.props\r\n    // 过滤hide为true的nav\r\n    navList=navList.filter(nav=>!nav.hide)\r\n    const path = this.props.location.pathname\r\n    return (\r\n      <TabBar>\r\n        {navList.map(nav => (\r\n          <Item\r\n            key={nav.path}\r\n            title={nav.text}\r\n            icon={\r\n              <img\r\n                src={require('./images/' + nav.icon + '.png').default}\r\n                style={{ width: '22px', height: '22px' }}\r\n              />\r\n            }\r\n            selectedIcon={\r\n              <img\r\n                src={require('./images/' + nav.icon + '-selected.png').default}\r\n                style={{ width: '22px', height: '22px' }}\r\n              />\r\n            }\r\n            selected={path === nav.path}\r\n            onPress={() => this.props.history.replace(nav.path)}\r\n          ></Item>\r\n        ))}\r\n      </TabBar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Navfooter) //向外暴露withRouter（）包装产生的组件\r\n// 暴露之后，内部会向组件中传入一些路由组件的属性值\r\n","D:\\demo\\my-react\\src\\components\\user-list\\user-list.jsx",["121","122"],"D:\\demo\\my-react\\src\\test\\socketIO_test.js",[],"D:\\demo\\my-react\\src\\containers\\chat\\chat.jsx",["123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":88,"column":16,"nodeType":"130","messageId":"131","endLine":88,"endColumn":18},{"ruleId":"128","severity":1,"message":"129","line":95,"column":28,"nodeType":"130","messageId":"131","endLine":95,"endColumn":30},{"ruleId":"128","severity":1,"message":"129","line":60,"column":18,"nodeType":"130","messageId":"131","endLine":60,"endColumn":20},{"ruleId":"128","severity":1,"message":"129","line":79,"column":18,"nodeType":"130","messageId":"131","endLine":79,"endColumn":20},{"ruleId":"128","severity":1,"message":"129","line":94,"column":18,"nodeType":"130","messageId":"131","endLine":94,"endColumn":20},{"ruleId":"128","severity":1,"message":"129","line":109,"column":18,"nodeType":"130","messageId":"131","endLine":109,"endColumn":20},{"ruleId":"128","severity":1,"message":"129","line":122,"column":18,"nodeType":"130","messageId":"131","endLine":122,"endColumn":20},{"ruleId":"128","severity":1,"message":"129","line":4,"column":13,"nodeType":"130","messageId":"131","endLine":4,"endColumn":15},{"ruleId":"128","severity":1,"message":"132","line":14,"column":20,"nodeType":"130","messageId":"131","endLine":14,"endColumn":22},{"ruleId":"128","severity":1,"message":"129","line":23,"column":25,"nodeType":"130","messageId":"131","endLine":23,"endColumn":27},{"ruleId":"128","severity":1,"message":"129","line":24,"column":23,"nodeType":"130","messageId":"131","endLine":24,"endColumn":25},{"ruleId":"133","severity":1,"message":"134","line":30,"column":41,"nodeType":"135","endLine":30,"endColumn":59},{"ruleId":"133","severity":1,"message":"134","line":27,"column":15,"nodeType":"135","endLine":30,"endColumn":17},{"ruleId":"133","severity":1,"message":"134","line":33,"column":15,"nodeType":"135","endLine":36,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":2,"column":17,"nodeType":"138","messageId":"139","endLine":2,"endColumn":26},{"ruleId":"136","severity":1,"message":"140","line":14,"column":11,"nodeType":"138","messageId":"139","endLine":14,"endColumn":15},{"ruleId":"136","severity":1,"message":"141","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":17},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'connect' is defined but never used.","no-global-assign","no-unsafe-negation"]