[{"D:\\demo\\my-react\\src\\index.js":"1","D:\\demo\\my-react\\src\\containers\\register\\register.jsx":"2","D:\\demo\\my-react\\src\\containers\\main\\main.jsx":"3","D:\\demo\\my-react\\src\\containers\\login\\login.jsx":"4","D:\\demo\\my-react\\src\\redux\\store.js":"5","D:\\demo\\my-react\\src\\redux\\reducers.js":"6","D:\\demo\\my-react\\src\\components\\logo\\logo.jsx":"7","D:\\demo\\my-react\\src\\redux\\action-types.js":"8","D:\\demo\\my-react\\src\\redux\\actions.js":"9","D:\\demo\\my-react\\src\\api\\ajax.js":"10","D:\\demo\\my-react\\src\\api\\index.js":"11","D:\\demo\\my-react\\src\\containers\\meinv_info\\meinv_info.jsx":"12","D:\\demo\\my-react\\src\\containers\\shuaige_info\\shuaige_info.jsx":"13","D:\\demo\\my-react\\src\\components\\header-selector\\header-selector.jsx":"14","D:\\demo\\my-react\\src\\utils\\index.js":"15","D:\\demo\\my-react\\src\\containers\\shuaige\\shuaige.jsx":"16","D:\\demo\\my-react\\src\\containers\\meinv\\meinv.jsx":"17","D:\\demo\\my-react\\src\\containers\\message\\message.jsx":"18","D:\\demo\\my-react\\src\\components\\not-found\\not-found.jsx":"19","D:\\demo\\my-react\\src\\containers\\personal\\personal.jsx":"20","D:\\demo\\my-react\\src\\components\\nav-footer\\nav-footer.jsx":"21","D:\\demo\\my-react\\src\\components\\user-list\\user-list.jsx":"22","D:\\demo\\my-react\\src\\test\\socketIO_test.js":"23","D:\\demo\\my-react\\src\\containers\\chat\\chat.jsx":"24","D:\\demo\\my-react\\src\\containers\\search\\search.jsx":"25"},{"size":755,"mtime":1608562857436,"results":"26","hashOfConfig":"27"},{"size":3139,"mtime":1608213105974,"results":"28","hashOfConfig":"27"},{"size":5566,"mtime":1609332110700,"results":"29","hashOfConfig":"27"},{"size":1975,"mtime":1608040776064,"results":"30","hashOfConfig":"27"},{"size":350,"mtime":1607783683826,"results":"31","hashOfConfig":"27"},{"size":2671,"mtime":1609074856541,"results":"32","hashOfConfig":"27"},{"size":369,"mtime":1607848726116,"results":"33","hashOfConfig":"27"},{"size":631,"mtime":1609065293567,"results":"34","hashOfConfig":"27"},{"size":5989,"mtime":1609338914624,"results":"35","hashOfConfig":"27"},{"size":678,"mtime":1609076106226,"results":"36","hashOfConfig":"27"},{"size":808,"mtime":1609339516932,"results":"37","hashOfConfig":"27"},{"size":2069,"mtime":1608381548800,"results":"38","hashOfConfig":"27"},{"size":2057,"mtime":1608298972361,"results":"39","hashOfConfig":"27"},{"size":1070,"mtime":1608467325479,"results":"40","hashOfConfig":"27"},{"size":523,"mtime":1608470828397,"results":"41","hashOfConfig":"27"},{"size":530,"mtime":1608560392295,"results":"42","hashOfConfig":"27"},{"size":528,"mtime":1608561382528,"results":"43","hashOfConfig":"27"},{"size":3623,"mtime":1609247483566,"results":"44","hashOfConfig":"27"},{"size":500,"mtime":1608385943181,"results":"45","hashOfConfig":"27"},{"size":1781,"mtime":1608561834632,"results":"46","hashOfConfig":"27"},{"size":1575,"mtime":1609064497371,"results":"47","hashOfConfig":"27"},{"size":1856,"mtime":1609330617929,"results":"48","hashOfConfig":"27"},{"size":283,"mtime":1608950798510,"results":"49","hashOfConfig":"27"},{"size":5926,"mtime":1609334421839,"results":"50","hashOfConfig":"27"},{"size":1845,"mtime":1609339771210,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1l0qysh",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\demo\\my-react\\src\\index.js",[],["110","111"],"D:\\demo\\my-react\\src\\containers\\register\\register.jsx",[],"D:\\demo\\my-react\\src\\containers\\main\\main.jsx",["112","113"],"D:\\demo\\my-react\\src\\containers\\login\\login.jsx",[],"D:\\demo\\my-react\\src\\redux\\store.js",[],"D:\\demo\\my-react\\src\\redux\\reducers.js",[],"D:\\demo\\my-react\\src\\components\\logo\\logo.jsx",[],"D:\\demo\\my-react\\src\\redux\\action-types.js",[],"D:\\demo\\my-react\\src\\redux\\actions.js",[],"D:\\demo\\my-react\\src\\api\\ajax.js",["114"],"import axios from 'axios'\r\n\r\nexport default function ajax (url, data = {}, types = 'GET') {\r\n  if (types === 'GET') {\r\n    // 原始数据是：{username：Tom，password：123}\r\n    // 格式化的数据：username=Tom&password=123\r\n    if (Object.keys(data).length === 0) {\r\n      return axios.get(url)\r\n    } else {\r\n      let paramStr = ''\r\n      Object.key(data).forEach(key => {\r\n        paramStr += key + '=' + data[key] + '&'\r\n      })\r\n      if (paramStr != '') {\r\n        paramStr = paramStr.substring(0, paramStr.lastIndexOf('&'))\r\n        url = url + '?' + paramStr\r\n      }\r\n      return axios.get(url)\r\n    }\r\n  } else {\r\n    return axios.post(url, data)\r\n  }\r\n}\r\n","D:\\demo\\my-react\\src\\api\\index.js",[],"D:\\demo\\my-react\\src\\containers\\meinv_info\\meinv_info.jsx",["115"],"// 帅哥信息完善的路由容器组件\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { NavBar, InputItem, TextareaItem, Button } from 'antd-mobile'\r\nimport HeaderSelector from '../../components/header-selector/header-selector'\r\nimport { updateUser } from '../../redux/actions'\r\n\r\nclass MeiNvInfo extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      header: '',\r\n      waimao: '',\r\n      xueii: '',\r\n      money: '',\r\n      detail: ''\r\n    }\r\n  }\r\n  render () {\r\n    const { header, type } = this.props\r\n    if (header) {\r\n      const path = type == 'meinv' ? '/meinv' : '/shuaige'\r\n      return <Redirect to={path} />\r\n    }\r\n    return (\r\n      <div>\r\n        <NavBar>美女信息完善</NavBar>\r\n        <HeaderSelector setHandleHeader={this.setHandleHeader}></HeaderSelector>\r\n        <InputItem\r\n          placeholder='输入美貌'\r\n          onChange={val => this.handleChange('waimao', val)}\r\n        >\r\n          美貌 ：\r\n        </InputItem>\r\n        <InputItem\r\n          placeholder='输入学历'\r\n          onChange={val => this.handleChange('xueii', val)}\r\n        >\r\n          学历 ：\r\n        </InputItem>\r\n        <InputItem\r\n          placeholder='输入薪资'\r\n          onChange={val => this.handleChange('money', val)}\r\n        >\r\n          薪资 ：\r\n        </InputItem>\r\n        <TextareaItem\r\n          title='交友宣言 ：'\r\n          rows={3}\r\n          clear\r\n          count={200}\r\n          onChange={val => this.handleChange('detail', val)}\r\n        ></TextareaItem>\r\n        <Button type='primary' onClick={this.save}>\r\n          保存\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n  handleChange = (name, val) => {\r\n    this.setState({\r\n      [name]: val\r\n    })\r\n  }\r\n  // 更新header\r\n  setHandleHeader = header => {\r\n    this.setState({\r\n      header\r\n    })\r\n  }\r\n  save = () => {\r\n    this.props.updateUser(this.state)\r\n  }\r\n}\r\n\r\nexport default connect(state => state.user,{updateUser})(MeiNvInfo)\r\n","D:\\demo\\my-react\\src\\containers\\shuaige_info\\shuaige_info.jsx",["116"],"// 帅哥信息完善的路由容器组件\r\nimport React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { NavBar, InputItem, TextareaItem, Button } from 'antd-mobile'\r\nimport HeaderSelector from '../../components/header-selector/header-selector'\r\nimport { updateUser } from '../../redux/actions'\r\n\r\nclass ShuaiGeInfo extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      header: '',\r\n      age: '',\r\n      xueii: '',\r\n      money: '',\r\n      detail: ''\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {header,type}=this.props\r\n    if (header) {\r\n      const path =type=='meinv'?'/meinv':'/shuaige'\r\n      return <Redirect to={path}/>\r\n    }\r\n    return (\r\n      <div>\r\n        <NavBar>帅哥信息完善</NavBar>\r\n        <HeaderSelector setHandleHeader={this.setHandleHeader}></HeaderSelector>\r\n        <InputItem\r\n          placeholder='输入年龄'\r\n          onChange={val => this.handleChange('age', val)}\r\n        >\r\n          年龄 ：\r\n        </InputItem>\r\n        <InputItem\r\n          placeholder='输入学历'\r\n          onChange={val => this.handleChange('xueii', val)}\r\n        >\r\n          学历 ：\r\n        </InputItem>\r\n        <InputItem\r\n          placeholder='输入薪资'\r\n          onChange={val => this.handleChange('money', val)}\r\n        >\r\n          薪资 ：\r\n        </InputItem>\r\n        <TextareaItem\r\n          title='交友宣言 ：'\r\n          rows={3}\r\n          clear\r\n          count={200}\r\n          onChange={val => this.handleChange('detail', val)}\r\n        ></TextareaItem>\r\n        <Button type='primary' onClick={this.save}>\r\n          保存\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n  handleChange = (name, val) => {\r\n    this.setState({\r\n      [name]: val\r\n    })\r\n  }\r\n  // 更新header\r\n  setHandleHeader = header => {\r\n    this.setState({\r\n      header\r\n    })\r\n  }\r\n  save = () => {\r\n    this.props.updateUser(this.state)\r\n  }\r\n}\r\n\r\nexport default connect(state => state.user, { updateUser })(ShuaiGeInfo)\r\n","D:\\demo\\my-react\\src\\components\\header-selector\\header-selector.jsx",["117"],"// 信息页面的头部\r\n\r\nimport React,{ Component } from \"react\";\r\nimport {List ,Grid} from 'antd-mobile'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class HeaderSelector extends Component {\r\n  static propTypes={\r\n    setHandleHeader:PropTypes.func.isRequired\r\n  }\r\n\r\n  state={\r\n    icon:null\r\n  }\r\n  constructor(prop) {\r\n    super(prop)\r\n    this.headerList=[]\r\n    for (let i = 0; i < 20; i++) {\r\n      this.headerList.push({\r\n        text:'头像'+(i+1),\r\n        icon:require(`../../assets/images/头像${i+1}.png`).default\r\n      })\r\n      \r\n    }\r\n  }\r\n  render () {\r\n    // const listHeader='请选择头像'\r\n    // 头部头像\r\n    const {icon}=this.state\r\n    const listHeader=icon? (<div>已选择的头像：<img src={icon} /></div>):'请选择头像'\r\n    return (\r\n      <List renderHeader={()=>listHeader}>\r\n        <Grid data={this.headerList} columnNum={5} onClick={this.headerClick}></Grid>\r\n      </List>\r\n    )\r\n  }\r\n  headerClick=({text,icon})=>{\r\n    this.setState({\r\n      icon\r\n    })\r\n    this.props.setHandleHeader(text)\r\n\r\n  }\r\n}","D:\\demo\\my-react\\src\\utils\\index.js",[],"D:\\demo\\my-react\\src\\containers\\shuaige\\shuaige.jsx",[],"D:\\demo\\my-react\\src\\containers\\meinv\\meinv.jsx",[],"D:\\demo\\my-react\\src\\containers\\message\\message.jsx",["118"],"/**\r\n * 消息主界面路由容器组件\r\n */\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'moment'\r\nimport { List, Badge } from 'antd-mobile'\r\nconst Item = List.Item\r\n\r\n// 对chatMsgs根据chat_id进行分组，并得到每个组的lastmsg组成的数组\r\n/**\r\n * 1、找出每个聊天的lastMsg，并用一个对象勇气来保存{chat_id:lastMsg}\r\n * 2、得到所有lastMsg的数组\r\n * 3、对数组进行排序（按create_time降序)\r\n * @param {*} chatMsgs\r\n */\r\nfunction getLastMsgs (chatMsgs, userId) {\r\n  const lastMsgObjs = {}\r\n  chatMsgs.forEach(msg => {\r\n    // 对msg进行个体统计  (别人发给我的，而且还说我没有读的消息)\r\n    if (msg.to === userId && !msg.read) {\r\n      msg.unReadCount = 1\r\n    } else {\r\n      msg.unReadCount = 0\r\n    }\r\n    const chatId = msg.chat_id\r\n    const lastMsg = lastMsgObjs[chatId]\r\n    if (!lastMsg) {\r\n      //当前msg就是所在组的lastMsg\r\n      lastMsgObjs[chatId] = msg\r\n    } else {\r\n      // 累加UnReadCount=已经统计的+当前msg的\r\n      const unReadCount = lastMsg.unReadCount + msg.unReadCount\r\n      //如果msg比lastMsg晚，就将msg保存为lastMsg\r\n      if (msg.create_time > lastMsg.create_time) {\r\n        lastMsgObjs[chatId] = msg\r\n      }\r\n      // 将UnReadCount保存最新的lastMsg上\r\n      lastMsgObjs[chatId].unReadCount = unReadCount\r\n    }\r\n  })\r\n  // 得到所有的lastMsg组成的数组\r\n  const lastMsgs = Object.values(lastMsgObjs)\r\n  // 对数组进行排序（按照create_time）\r\n  lastMsgs.sort(function (m1, m2) {\r\n    //如果结果小于0，将m1放在前面，如果结果为0，保持不变，如果大于0，m2放在前面\r\n    return m1.create_time - m2.create_time\r\n  })\r\n\r\n  return lastMsgs\r\n}\r\nclass Message extends Component {\r\n  render () {\r\n    const { user } = this.props\r\n    const { users, chatMsgs } = this.props.chat\r\n\r\n    // 对chatMsgs根据chat_id进行分组\r\n    const lastLists = getLastMsgs(chatMsgs, user._id) //不加this的函数调用，函数需要定义到class外面，如果加this调用函数，函数需要定义到class里面\r\n    return (\r\n      <List\r\n        style={{ marginTop: 50, marginBottom: 50 }}\r\n        className='messageStyle'\r\n      >\r\n        {lastLists.map(msg => {\r\n          // 得到目标用户的id\r\n          const fromTime = Moment(msg.create_time).format('HH:mm')\r\n          const targetUserId = msg.to === user._id ? msg.from : msg.to\r\n          // 得到目标用户的信息\r\n          const targetUser = users[targetUserId]\r\n          if (msg.unReadCount > 99) {\r\n            msg.unReadCount = 99 + '+'\r\n          }\r\n          return (\r\n            <Item\r\n              extra={fromTime}\r\n              arrow='horizontal'\r\n              key={msg._id}\r\n              onClick={() => this.props.history.push(`/chat/${targetUserId}`)}\r\n            >\r\n              <Badge text={msg.unReadCount}>\r\n                <img\r\n                  src={\r\n                    targetUser.header\r\n                      ? require(`../../assets/images/${targetUser.header}.png`)\r\n                          .default\r\n                      : null\r\n                  }\r\n                />\r\n              </Badge>\r\n              <span style={{ marginLeft: 20 ,width:'80%'}} className='userNameAndContent'>\r\n                <div>{targetUser.username}</div>\r\n                <div>{msg.content}</div>\r\n              </span>\r\n            </Item>\r\n          )\r\n        })}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({ user: state.user, chat: state.chatMsgList }),\r\n  {}\r\n)(Message)\r\n","D:\\demo\\my-react\\src\\components\\not-found\\not-found.jsx",[],"D:\\demo\\my-react\\src\\containers\\personal\\personal.jsx",[],"D:\\demo\\my-react\\src\\components\\nav-footer\\nav-footer.jsx",["119","120"],"/**\r\n * 底部导航列表\r\n */\r\nimport React, { Component } from 'react'\r\nimport { TabBar } from 'antd-mobile'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom' //希望在非路由组件中使用路由库的API\r\n\r\nconst Item = TabBar.Item\r\n\r\nclass Navfooter extends Component {\r\n  static propTypes = {\r\n    navList: PropTypes.array.isRequired,\r\n    unReadCount: PropTypes.number.isRequired\r\n  }\r\n  render () {\r\n    let { navList ,unReadCount} = this.props\r\n    // 过滤hide为true的nav\r\n    navList=navList.filter(nav=>!nav.hide)\r\n    const path = this.props.location.pathname\r\n    return (\r\n      <TabBar>\r\n        {navList.map(nav => (\r\n          <Item\r\n            key={nav.path}\r\n            badge={nav.path==='/message'?unReadCount:0}\r\n            title={nav.text}\r\n            icon={\r\n              <img\r\n                src={require('./images/' + nav.icon + '.png').default}\r\n                style={{ width: '22px', height: '22px' }}\r\n              />\r\n            }\r\n            selectedIcon={\r\n              <img\r\n                src={require('./images/' + nav.icon + '-selected.png').default}\r\n                style={{ width: '22px', height: '22px' }}\r\n              />\r\n            }\r\n            selected={path === nav.path}\r\n            onPress={() => this.props.history.replace(nav.path)}\r\n          ></Item>\r\n        ))}\r\n      </TabBar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Navfooter) //向外暴露withRouter（）包装产生的组件\r\n// 暴露之后，内部会向组件中传入一些路由组件的属性值\r\n","D:\\demo\\my-react\\src\\components\\user-list\\user-list.jsx",["121","122"],"D:\\demo\\my-react\\src\\test\\socketIO_test.js",["123"],"//连接服务器,得到代表连接的socket对象\r\nimport io from 'socket.io-client'\r\n\r\n\r\n// //向服务器发送消息\r\n// socket.emit('sendMsg', { name: 'zhenni', date: Date.now() })\r\n// console.log('浏览器端向服务器发送消息:', { name: 'zhenni', date: Date.now() })\r\n","D:\\demo\\my-react\\src\\containers\\chat\\chat.jsx",[],"D:\\demo\\my-react\\src\\containers\\search\\search.jsx",["124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":90,"column":16,"nodeType":"131","messageId":"132","endLine":90,"endColumn":18},{"ruleId":"129","severity":1,"message":"130","line":98,"column":34,"nodeType":"131","messageId":"132","endLine":98,"endColumn":36},{"ruleId":"129","severity":1,"message":"133","line":14,"column":20,"nodeType":"131","messageId":"132","endLine":14,"endColumn":22},{"ruleId":"129","severity":1,"message":"130","line":23,"column":25,"nodeType":"131","messageId":"132","endLine":23,"endColumn":27},{"ruleId":"129","severity":1,"message":"130","line":24,"column":23,"nodeType":"131","messageId":"132","endLine":24,"endColumn":25},{"ruleId":"134","severity":1,"message":"135","line":30,"column":41,"nodeType":"136","endLine":30,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":81,"column":17,"nodeType":"136","endLine":88,"endColumn":19},{"ruleId":"134","severity":1,"message":"135","line":29,"column":15,"nodeType":"136","endLine":32,"endColumn":17},{"ruleId":"134","severity":1,"message":"135","line":35,"column":15,"nodeType":"136","endLine":38,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":2,"column":17,"nodeType":"139","messageId":"140","endLine":2,"endColumn":26},{"ruleId":"137","severity":1,"message":"141","line":15,"column":11,"nodeType":"139","messageId":"140","endLine":15,"endColumn":15},{"ruleId":"137","severity":1,"message":"142","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":10},{"ruleId":"137","severity":1,"message":"138","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":26},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'io' is defined but never used.","no-global-assign","no-unsafe-negation"]