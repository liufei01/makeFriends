[{"D:\\demo\\my-react\\src\\index.js":"1","D:\\demo\\my-react\\src\\containers\\register\\register.jsx":"2","D:\\demo\\my-react\\src\\containers\\main\\main.jsx":"3","D:\\demo\\my-react\\src\\containers\\login\\login.jsx":"4","D:\\demo\\my-react\\src\\redux\\store.js":"5","D:\\demo\\my-react\\src\\redux\\reducers.js":"6","D:\\demo\\my-react\\src\\components\\logo\\logo.jsx":"7","D:\\demo\\my-react\\src\\redux\\action-types.js":"8","D:\\demo\\my-react\\src\\redux\\actions.js":"9","D:\\demo\\my-react\\src\\api\\ajax.js":"10","D:\\demo\\my-react\\src\\api\\index.js":"11","D:\\demo\\my-react\\src\\containers\\meinv_info\\meinv_info.jsx":"12","D:\\demo\\my-react\\src\\containers\\shuaige_info\\shuaige_info.jsx":"13","D:\\demo\\my-react\\src\\components\\header-selector\\header-selector.jsx":"14","D:\\demo\\my-react\\src\\utils\\index.js":"15","D:\\demo\\my-react\\src\\containers\\shuaige\\shuaige.jsx":"16","D:\\demo\\my-react\\src\\containers\\meinv\\meinv.jsx":"17","D:\\demo\\my-react\\src\\containers\\message\\message.jsx":"18","D:\\demo\\my-react\\src\\components\\not-found\\not-found.jsx":"19","D:\\demo\\my-react\\src\\containers\\personal\\personal.jsx":"20","D:\\demo\\my-react\\src\\components\\nav-footer\\nav-footer.jsx":"21","D:\\demo\\my-react\\src\\components\\user-list\\user-list.jsx":"22","D:\\demo\\my-react\\src\\test\\socketIO_test.js":"23","D:\\demo\\my-react\\src\\containers\\chat\\chat.jsx":"24","D:\\demo\\my-react\\src\\containers\\search\\search.jsx":"25"},{"size":755,"mtime":1608562857436,"results":"26","hashOfConfig":"27"},{"size":3139,"mtime":1608213105974,"results":"28","hashOfConfig":"27"},{"size":5566,"mtime":1609332110700,"results":"29","hashOfConfig":"27"},{"size":1975,"mtime":1608040776064,"results":"30","hashOfConfig":"27"},{"size":350,"mtime":1607783683826,"results":"31","hashOfConfig":"27"},{"size":2633,"mtime":1609420397261,"results":"32","hashOfConfig":"27"},{"size":369,"mtime":1607848726116,"results":"33","hashOfConfig":"27"},{"size":631,"mtime":1609065293567,"results":"34","hashOfConfig":"27"},{"size":6003,"mtime":1609421026688,"results":"35","hashOfConfig":"27"},{"size":678,"mtime":1609076106226,"results":"36","hashOfConfig":"27"},{"size":826,"mtime":1609505292836,"results":"37","hashOfConfig":"27"},{"size":2069,"mtime":1608381548800,"results":"38","hashOfConfig":"27"},{"size":2057,"mtime":1608298972361,"results":"39","hashOfConfig":"27"},{"size":1070,"mtime":1608467325479,"results":"40","hashOfConfig":"27"},{"size":523,"mtime":1608470828397,"results":"41","hashOfConfig":"27"},{"size":718,"mtime":1609420576540,"results":"42","hashOfConfig":"27"},{"size":631,"mtime":1609420351618,"results":"43","hashOfConfig":"27"},{"size":3623,"mtime":1609247483566,"results":"44","hashOfConfig":"27"},{"size":500,"mtime":1608385943181,"results":"45","hashOfConfig":"27"},{"size":1781,"mtime":1608561834632,"results":"46","hashOfConfig":"27"},{"size":1606,"mtime":1609503225153,"results":"47","hashOfConfig":"27"},{"size":1856,"mtime":1609330617929,"results":"48","hashOfConfig":"27"},{"size":283,"mtime":1608950798510,"results":"49","hashOfConfig":"27"},{"size":5926,"mtime":1609334421839,"results":"50","hashOfConfig":"27"},{"size":1930,"mtime":1609421103481,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1l0qysh",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},"D:\\demo\\my-react\\src\\index.js",[],["113","114"],"D:\\demo\\my-react\\src\\containers\\register\\register.jsx",[],"D:\\demo\\my-react\\src\\containers\\main\\main.jsx",["115","116"],"// 注册主界面m组件\r\nimport React, { Component } from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { NavBar, Icon } from 'antd-mobile'\r\nimport ShuaiGeInfo from '../shuaige_info/shuaige_info'\r\nimport MeiNvInfo from '../meinv_info/meinv_info'\r\nimport MeiNv from '../meinv/meinv'\r\nimport ShuaiGe from '../shuaige/shuaige'\r\nimport Message from '../message/message'\r\nimport Personal from '../personal/personal'\r\nimport NotFound from '../../components/not-found/not-found'\r\nimport NavFooter from '../../components/nav-footer/nav-footer'\r\nimport Chat from '../chat/chat'\r\nimport Search from '../search/search'\r\nimport Cookies from 'js-cookie' // 可以操作前端cookie的对象set()/get()/remove()\r\nimport { setPath } from '../../utils/index'\r\nimport { getUser } from '../../redux/actions'\r\n\r\nclass Main extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {}\r\n  }\r\n  // 给组件对象添加属性\r\n  navList = [\r\n    //包含所有导航组件的相关属性信息\r\n    {\r\n      path: '/shuaige', // 路由路径\r\n      component: ShuaiGe,\r\n      title: '美女列表',\r\n      icon: 'meinv',\r\n      text: '美女'\r\n    },\r\n    {\r\n      path: '/meinv', // 路由路径\r\n      component: MeiNv,\r\n      title: '帅哥列表',\r\n      icon: 'shuaige',\r\n      text: '帅哥'\r\n    },\r\n    {\r\n      path: '/message', // 路由路径\r\n      component: Message,\r\n      title: '消息列表',\r\n      icon: 'message',\r\n      text: '消息'\r\n    },\r\n    {\r\n      path: '/personal', // 路由路径\r\n      component: Personal,\r\n      title: '用户中心',\r\n      icon: 'personal',\r\n      text: '个人'\r\n    }\r\n  ]\r\n  // 生命周期函数\r\n  componentDidMount () {\r\n    // 曾经登录过（cookie中有userId），但是现在还没登录（reducer中有userId的数据），如果cookie中有userId，发送请求获取对应的user\r\n    const userId = Cookies.get('userId')\r\n\r\n    if (userId && !this.props.user._id) {\r\n      // 发送异步请求，获取user\r\n      this.props.getUser()\r\n    }\r\n  }\r\n  render () {\r\n    /**\r\n     * 实现自动登录的条件\r\n     * 1、componentDidMount：曾经登录过（cookie中有userId），但是现在还没登录（reducer中有userId的数据），如果cookie中有userId，发送请求获取对应的user\r\n     * 2、render ：如果cookie中没有userid，跳转到登录页面\r\n     * 2.1判断redux管理的user中是否有_id,如果没有，暂时不做处理\r\n     * 2.2如果有_id 说明当前已经登录，显示对应的界面\r\n     * 3、如果已经登录，如果请求的时根目录\r\n     * 根据user的type和header来计算出一个重定向的路由路径，并自动重定向\r\n     *\r\n     */\r\n    //  路由跳转情况1：没有userId，直接跳转到login页面\r\n    const userId = Cookies.get('userId')\r\n    const { unReadCount } = this.props\r\n    if (!userId) {\r\n      return <Redirect to={'/login'} />\r\n    }\r\n    // 路由跳转情况2：如果没有_id通过生命周期函数去请求用户信息获取用户信息实现自登陆\r\n    // 如果有_id进根据url的地址进行跳转\r\n    if (!this.props.user._id) {\r\n      return null\r\n    } else {\r\n      let path = this.props.location.pathname\r\n      if (path == '/')\r\n        path = setPath(this.props.user.type, this.props.user.header)\r\n\r\n      const { navList } = this\r\n      const routePath = this.props.location.pathname\r\n      const currentNav = navList.find(nav => nav.path === routePath) //得到当前的nav，可能没有\r\n      // 处理底部导航的显示和隐藏\r\n      if (currentNav) {\r\n        if (this.props.user.type == 'meinv') {\r\n          this.navList[0].hide = true\r\n        } else {\r\n          this.navList[1].hide = true\r\n        }\r\n      }\r\n      return (\r\n        <div>\r\n          {currentNav ? (\r\n            currentNav.path === '/personal' ? (\r\n              <NavBar\r\n                className='sticky-header'\r\n                rightContent={[<Icon key='1' type='ellipsis' />]}\r\n              >\r\n                {currentNav.title}\r\n              </NavBar>\r\n            ) : (\r\n              <NavBar\r\n                className='sticky-header'\r\n                rightContent={[\r\n                  <Icon\r\n                    key='0'\r\n                    type='search'\r\n                    style={{ marginRight: '16px' }}\r\n                    onClick={()=>this.props.history.push(`/search`)}\r\n                  />,\r\n                  <Icon key='1' type='ellipsis' />\r\n                ]}\r\n              >\r\n                {currentNav.title}\r\n              </NavBar>\r\n            )\r\n          ) : null}\r\n\r\n          <Switch>\r\n            {navList.map(nav => (\r\n              <Route\r\n                path={nav.path}\r\n                component={nav.component}\r\n                key={nav.path}\r\n              ></Route>\r\n            ))}\r\n            <Route path='/shuaigeinfo' component={ShuaiGeInfo}></Route>\r\n            <Route path='/meinvinfo' component={MeiNvInfo}></Route>\r\n            <Route path='/search' component={Search}></Route>\r\n            <Route path='/chat/:userId' component={Chat}></Route>\r\n            <Route path='/notfound' component={NotFound}></Route>\r\n            <Redirect to={path} />\r\n          </Switch>\r\n          {currentNav ? (\r\n            <NavFooter navList={navList} unReadCount={unReadCount}></NavFooter>\r\n          ) : null}\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({ user: state.user, unReadCount: state.chatMsgList.unReadCount }),\r\n  { getUser }\r\n)(Main)\r\n","D:\\demo\\my-react\\src\\containers\\login\\login.jsx",[],"D:\\demo\\my-react\\src\\redux\\store.js",[],"D:\\demo\\my-react\\src\\redux\\reducers.js",[],"D:\\demo\\my-react\\src\\components\\logo\\logo.jsx",[],"D:\\demo\\my-react\\src\\redux\\action-types.js",[],"D:\\demo\\my-react\\src\\redux\\actions.js",[],"D:\\demo\\my-react\\src\\api\\ajax.js",["117"],"import axios from 'axios'\r\n\r\nexport default function ajax (url, data = {}, types = 'GET') {\r\n  if (types === 'GET') {\r\n    // 原始数据是：{username：Tom，password：123}\r\n    // 格式化的数据：username=Tom&password=123\r\n    if (Object.keys(data).length === 0) {\r\n      return axios.get(url)\r\n    } else {\r\n      let paramStr = ''\r\n      Object.key(data).forEach(key => {\r\n        paramStr += key + '=' + data[key] + '&'\r\n      })\r\n      if (paramStr != '') {\r\n        paramStr = paramStr.substring(0, paramStr.lastIndexOf('&'))\r\n        url = url + '?' + paramStr\r\n      }\r\n      return axios.get(url)\r\n    }\r\n  } else {\r\n    return axios.post(url, data)\r\n  }\r\n}\r\n","D:\\demo\\my-react\\src\\api\\index.js",[],"D:\\demo\\my-react\\src\\containers\\meinv_info\\meinv_info.jsx",["118"],"// 帅哥信息完善的路由容器组件\r\nimport React, { Component } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { NavBar, InputItem, TextareaItem, Button } from 'antd-mobile'\r\nimport HeaderSelector from '../../components/header-selector/header-selector'\r\nimport { updateUser } from '../../redux/actions'\r\n\r\nclass MeiNvInfo extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      header: '',\r\n      waimao: '',\r\n      xueii: '',\r\n      money: '',\r\n      detail: ''\r\n    }\r\n  }\r\n  render () {\r\n    const { header, type } = this.props\r\n    if (header) {\r\n      const path = type == 'meinv' ? '/meinv' : '/shuaige'\r\n      return <Redirect to={path} />\r\n    }\r\n    return (\r\n      <div>\r\n        <NavBar>美女信息完善</NavBar>\r\n        <HeaderSelector setHandleHeader={this.setHandleHeader}></HeaderSelector>\r\n        <InputItem\r\n          placeholder='输入美貌'\r\n          onChange={val => this.handleChange('waimao', val)}\r\n        >\r\n          美貌 ：\r\n        </InputItem>\r\n        <InputItem\r\n          placeholder='输入学历'\r\n          onChange={val => this.handleChange('xueii', val)}\r\n        >\r\n          学历 ：\r\n        </InputItem>\r\n        <InputItem\r\n          placeholder='输入薪资'\r\n          onChange={val => this.handleChange('money', val)}\r\n        >\r\n          薪资 ：\r\n        </InputItem>\r\n        <TextareaItem\r\n          title='交友宣言 ：'\r\n          rows={3}\r\n          clear\r\n          count={200}\r\n          onChange={val => this.handleChange('detail', val)}\r\n        ></TextareaItem>\r\n        <Button type='primary' onClick={this.save}>\r\n          保存\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n  handleChange = (name, val) => {\r\n    this.setState({\r\n      [name]: val\r\n    })\r\n  }\r\n  // 更新header\r\n  setHandleHeader = header => {\r\n    this.setState({\r\n      header\r\n    })\r\n  }\r\n  save = () => {\r\n    this.props.updateUser(this.state)\r\n  }\r\n}\r\n\r\nexport default connect(state => state.user,{updateUser})(MeiNvInfo)\r\n","D:\\demo\\my-react\\src\\containers\\shuaige_info\\shuaige_info.jsx",["119"],"// 帅哥信息完善的路由容器组件\r\nimport React, { Component } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { NavBar, InputItem, TextareaItem, Button } from 'antd-mobile'\r\nimport HeaderSelector from '../../components/header-selector/header-selector'\r\nimport { updateUser } from '../../redux/actions'\r\n\r\nclass ShuaiGeInfo extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      header: '',\r\n      age: '',\r\n      xueii: '',\r\n      money: '',\r\n      detail: ''\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const {header,type}=this.props\r\n    if (header) {\r\n      const path =type=='meinv'?'/meinv':'/shuaige'\r\n      return <Redirect to={path}/>\r\n    }\r\n    return (\r\n      <div>\r\n        <NavBar>帅哥信息完善</NavBar>\r\n        <HeaderSelector setHandleHeader={this.setHandleHeader}></HeaderSelector>\r\n        <InputItem\r\n          placeholder='输入年龄'\r\n          onChange={val => this.handleChange('age', val)}\r\n        >\r\n          年龄 ：\r\n        </InputItem>\r\n        <InputItem\r\n          placeholder='输入学历'\r\n          onChange={val => this.handleChange('xueii', val)}\r\n        >\r\n          学历 ：\r\n        </InputItem>\r\n        <InputItem\r\n          placeholder='输入薪资'\r\n          onChange={val => this.handleChange('money', val)}\r\n        >\r\n          薪资 ：\r\n        </InputItem>\r\n        <TextareaItem\r\n          title='交友宣言 ：'\r\n          rows={3}\r\n          clear\r\n          count={200}\r\n          onChange={val => this.handleChange('detail', val)}\r\n        ></TextareaItem>\r\n        <Button type='primary' onClick={this.save}>\r\n          保存\r\n        </Button>\r\n      </div>\r\n    )\r\n  }\r\n  handleChange = (name, val) => {\r\n    this.setState({\r\n      [name]: val\r\n    })\r\n  }\r\n  // 更新header\r\n  setHandleHeader = header => {\r\n    this.setState({\r\n      header\r\n    })\r\n  }\r\n  save = () => {\r\n    this.props.updateUser(this.state)\r\n  }\r\n}\r\n\r\nexport default connect(state => state.user, { updateUser })(ShuaiGeInfo)\r\n","D:\\demo\\my-react\\src\\components\\header-selector\\header-selector.jsx",["120"],"// 信息页面的头部\r\n\r\nimport React,{ Component } from \"react\";\r\nimport {List ,Grid} from 'antd-mobile'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class HeaderSelector extends Component {\r\n  static propTypes={\r\n    setHandleHeader:PropTypes.func.isRequired\r\n  }\r\n\r\n  state={\r\n    icon:null\r\n  }\r\n  constructor(prop) {\r\n    super(prop)\r\n    this.headerList=[]\r\n    for (let i = 0; i < 20; i++) {\r\n      this.headerList.push({\r\n        text:'头像'+(i+1),\r\n        icon:require(`../../assets/images/头像${i+1}.png`).default\r\n      })\r\n      \r\n    }\r\n  }\r\n  render () {\r\n    // const listHeader='请选择头像'\r\n    // 头部头像\r\n    const {icon}=this.state\r\n    const listHeader=icon? (<div>已选择的头像：<img src={icon} /></div>):'请选择头像'\r\n    return (\r\n      <List renderHeader={()=>listHeader}>\r\n        <Grid data={this.headerList} columnNum={5} onClick={this.headerClick}></Grid>\r\n      </List>\r\n    )\r\n  }\r\n  headerClick=({text,icon})=>{\r\n    this.setState({\r\n      icon\r\n    })\r\n    this.props.setHandleHeader(text)\r\n\r\n  }\r\n}","D:\\demo\\my-react\\src\\utils\\index.js",[],"D:\\demo\\my-react\\src\\containers\\shuaige\\shuaige.jsx",[],"D:\\demo\\my-react\\src\\containers\\meinv\\meinv.jsx",[],"D:\\demo\\my-react\\src\\containers\\message\\message.jsx",["121"],"/**\r\n * 消息主界面路由容器组件\r\n */\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Moment from 'moment'\r\nimport { List, Badge } from 'antd-mobile'\r\nconst Item = List.Item\r\n\r\n// 对chatMsgs根据chat_id进行分组，并得到每个组的lastmsg组成的数组\r\n/**\r\n * 1、找出每个聊天的lastMsg，并用一个对象勇气来保存{chat_id:lastMsg}\r\n * 2、得到所有lastMsg的数组\r\n * 3、对数组进行排序（按create_time降序)\r\n * @param {*} chatMsgs\r\n */\r\nfunction getLastMsgs (chatMsgs, userId) {\r\n  const lastMsgObjs = {}\r\n  chatMsgs.forEach(msg => {\r\n    // 对msg进行个体统计  (别人发给我的，而且还说我没有读的消息)\r\n    if (msg.to === userId && !msg.read) {\r\n      msg.unReadCount = 1\r\n    } else {\r\n      msg.unReadCount = 0\r\n    }\r\n    const chatId = msg.chat_id\r\n    const lastMsg = lastMsgObjs[chatId]\r\n    if (!lastMsg) {\r\n      //当前msg就是所在组的lastMsg\r\n      lastMsgObjs[chatId] = msg\r\n    } else {\r\n      // 累加UnReadCount=已经统计的+当前msg的\r\n      const unReadCount = lastMsg.unReadCount + msg.unReadCount\r\n      //如果msg比lastMsg晚，就将msg保存为lastMsg\r\n      if (msg.create_time > lastMsg.create_time) {\r\n        lastMsgObjs[chatId] = msg\r\n      }\r\n      // 将UnReadCount保存最新的lastMsg上\r\n      lastMsgObjs[chatId].unReadCount = unReadCount\r\n    }\r\n  })\r\n  // 得到所有的lastMsg组成的数组\r\n  const lastMsgs = Object.values(lastMsgObjs)\r\n  // 对数组进行排序（按照create_time）\r\n  lastMsgs.sort(function (m1, m2) {\r\n    //如果结果小于0，将m1放在前面，如果结果为0，保持不变，如果大于0，m2放在前面\r\n    return m1.create_time - m2.create_time\r\n  })\r\n\r\n  return lastMsgs\r\n}\r\nclass Message extends Component {\r\n  render () {\r\n    const { user } = this.props\r\n    const { users, chatMsgs } = this.props.chat\r\n\r\n    // 对chatMsgs根据chat_id进行分组\r\n    const lastLists = getLastMsgs(chatMsgs, user._id) //不加this的函数调用，函数需要定义到class外面，如果加this调用函数，函数需要定义到class里面\r\n    return (\r\n      <List\r\n        style={{ marginTop: 50, marginBottom: 50 }}\r\n        className='messageStyle'\r\n      >\r\n        {lastLists.map(msg => {\r\n          // 得到目标用户的id\r\n          const fromTime = Moment(msg.create_time).format('HH:mm')\r\n          const targetUserId = msg.to === user._id ? msg.from : msg.to\r\n          // 得到目标用户的信息\r\n          const targetUser = users[targetUserId]\r\n          if (msg.unReadCount > 99) {\r\n            msg.unReadCount = 99 + '+'\r\n          }\r\n          return (\r\n            <Item\r\n              extra={fromTime}\r\n              arrow='horizontal'\r\n              key={msg._id}\r\n              onClick={() => this.props.history.push(`/chat/${targetUserId}`)}\r\n            >\r\n              <Badge text={msg.unReadCount}>\r\n                <img\r\n                  src={\r\n                    targetUser.header\r\n                      ? require(`../../assets/images/${targetUser.header}.png`)\r\n                          .default\r\n                      : null\r\n                  }\r\n                />\r\n              </Badge>\r\n              <span style={{ marginLeft: 20 ,width:'80%'}} className='userNameAndContent'>\r\n                <div>{targetUser.username}</div>\r\n                <div>{msg.content}</div>\r\n              </span>\r\n            </Item>\r\n          )\r\n        })}\r\n      </List>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({ user: state.user, chat: state.chatMsgList }),\r\n  {}\r\n)(Message)\r\n","D:\\demo\\my-react\\src\\components\\not-found\\not-found.jsx",[],"D:\\demo\\my-react\\src\\containers\\personal\\personal.jsx",[],"D:\\demo\\my-react\\src\\components\\nav-footer\\nav-footer.jsx",["122","123"],"/**\r\n * 底部导航列表\r\n */\r\nimport React, { Component } from 'react'\r\nimport { TabBar } from 'antd-mobile'\r\nimport PropTypes from 'prop-types'\r\nimport { withRouter } from 'react-router-dom' //希望在非路由组件中使用路由库的API\r\n\r\nconst Item = TabBar.Item\r\n\r\nclass Navfooter extends Component {\r\n  static propTypes = {\r\n    navList: PropTypes.array.isRequired,\r\n    unReadCount: PropTypes.number.isRequired\r\n  }\r\n  render () {\r\n    let { navList ,unReadCount} = this.props\r\n    console.log(unReadCount);\r\n    // 过滤hide为true的nav\r\n    navList=navList.filter(nav=>!nav.hide)\r\n    const path = this.props.location.pathname\r\n    return (\r\n      <TabBar>\r\n        {navList.map(nav => (\r\n          <Item\r\n            key={nav.path}\r\n            badge={nav.path==='/message'?unReadCount:0}\r\n            title={nav.text}\r\n            icon={\r\n              <img\r\n                src={require('./images/' + nav.icon + '.png').default}\r\n                style={{ width: '22px', height: '22px' }}\r\n              />\r\n            }\r\n            selectedIcon={\r\n              <img\r\n                src={require('./images/' + nav.icon + '-selected.png').default}\r\n                style={{ width: '22px', height: '22px' }}\r\n              />\r\n            }\r\n            selected={path === nav.path}\r\n            onPress={() => this.props.history.replace(nav.path)}\r\n          ></Item>\r\n        ))}\r\n      </TabBar>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(Navfooter) //向外暴露withRouter（）包装产生的组件\r\n// 暴露之后，内部会向组件中传入一些路由组件的属性值\r\n","D:\\demo\\my-react\\src\\components\\user-list\\user-list.jsx",["124","125"],"// 显示指定用户列表的UI组件\r\nimport React, { Component } from 'react'\r\nimport PropType from 'prop-types'\r\nimport { Card, WingBlank, WhiteSpace } from 'antd-mobile'\r\nimport QueueAnim from 'rc-queue-anim'\r\nimport { withRouter } from 'react-router-dom'\r\nconst Header = Card.Header\r\nconst Body = Card.Body\r\nclass UserList extends React.Component {\r\n  static propType = {\r\n    userList: PropType.array.isRequired\r\n  }\r\n  render () {\r\n    const { userlist } = this.props\r\n    const user = {\r\n      header: '头像1',\r\n      username: 'dapiaol',\r\n      waimao: '美丽',\r\n      money: '12',\r\n      xueii: '本科',\r\n      detail: 'dddd'\r\n    }\r\n\r\n    return (\r\n      <WingBlank style={{ marginBottom: 55, marginTop: 50 }}>\r\n        {/* alpha left right top bottom scale scaleBig scaleX scaleY */}\r\n        <QueueAnim type={'right'} delay={300}>\r\n          {userlist.map(user => {\r\n            return (\r\n              <div key={user._id}>\r\n                <WhiteSpace />\r\n                <Card\r\n                  onClick={() => this.props.history.push(`/chat/${user._id}`)}\r\n                >\r\n                  <Header\r\n                    thumb={\r\n                      require(`../../assets/images/${user.header}.png`).default\r\n                    }\r\n                    extra={user.username}\r\n                  />\r\n                  <Body>\r\n                    {user.waimao ? <div>美貌: {user.waimao}</div> : null}\r\n                    {user.age ? <div>年龄: {user.age}</div> : null}\r\n                    <div>学历: {user.xueii}</div>\r\n                    <div>月薪: {user.money}</div>\r\n                    <div>宣言: {user.detail}</div>\r\n                  </Body>\r\n                </Card>\r\n              </div>\r\n            )\r\n          })}\r\n        </QueueAnim>\r\n      </WingBlank>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(UserList)\r\n","D:\\demo\\my-react\\src\\test\\socketIO_test.js",["126"],"//连接服务器,得到代表连接的socket对象\r\nimport io from 'socket.io-client'\r\n\r\n\r\n// //向服务器发送消息\r\n// socket.emit('sendMsg', { name: 'zhenni', date: Date.now() })\r\n// console.log('浏览器端向服务器发送消息:', { name: 'zhenni', date: Date.now() })\r\n","D:\\demo\\my-react\\src\\containers\\chat\\chat.jsx",[],"D:\\demo\\my-react\\src\\containers\\search\\search.jsx",["127"],"import React, { Component } from 'react'\r\nimport {\r\n  NavBar,\r\n  Button,\r\n  SearchBar,\r\n  WhiteSpace,\r\n  List,\r\n  Checkbox,\r\n  Icon\r\n} from 'antd-mobile'\r\nimport {connect} from 'react-redux'\r\nimport {getXueLiPeo} from '../../redux/actions'\r\n\r\nconst CheckboxItem = Checkbox.CheckboxItem\r\nclass Search extends React.Component {\r\n  state = {\r\n    xueliArrays: []\r\n  }\r\n  onChange = val => {\r\n    this.setState(\r\n      {\r\n        xueliArrays: [...this.state.xueliArrays, val]\r\n      },\r\n      function () {\r\n        // console.log(this.state.xueliArrays)\r\n      }\r\n    )\r\n  }\r\n  render () {\r\n    const data = [\r\n      { xueii: '初中' },\r\n      { xueii: '高中' },\r\n      { xueii: '专科' },\r\n      { xueii: '本科' },\r\n      { xueii: '硕士' },\r\n      { xueii: '博士' },\r\n      { xueii: '博士后' }\r\n    ]\r\n    return (\r\n      <div>\r\n        <NavBar\r\n          icon={<Icon type='left'></Icon>}\r\n          className='sticky-header'\r\n          onLeftClick={() => this.props.history.goBack()}\r\n        >\r\n          搜索\r\n        </NavBar>\r\n\r\n        <SearchBar\r\n          style={{ marginTop: 50 }}\r\n          placeholder='搜索'\r\n          ref={ref => (this.autoFocusInst = ref)}\r\n        />\r\n        <WhiteSpace />\r\n\r\n        <h3>按条件搜索</h3>\r\n        <WhiteSpace />\r\n        <List renderHeader={() => '学历'}>\r\n          {data.map(i => (\r\n            <CheckboxItem key={i.xueii} onChange={() => this.onChange(i)}>\r\n              {i.xueii}\r\n            </CheckboxItem>\r\n          ))}\r\n        </List>\r\n        <WhiteSpace />\r\n        <Button onClick={()=>this.searthRes()}>搜索</Button>\r\n        <WhiteSpace />\r\n      </div>\r\n    )\r\n  }\r\n  searthRes=()=>{\r\n    let {type}=this.props.user\r\n    type=type==='shuaige'?'meinv':'shuaige'\r\n    this.props.getXueLiPeo({type,xueliArrays:this.state.xueliArrays})\r\n  }\r\n}\r\n\r\nexport default connect(state=>({user:state.user,userList:state.userlist}),{getXueLiPeo})(Search)",{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":90,"column":16,"nodeType":"134","messageId":"135","endLine":90,"endColumn":18},{"ruleId":"132","severity":1,"message":"133","line":98,"column":34,"nodeType":"134","messageId":"135","endLine":98,"endColumn":36},{"ruleId":"132","severity":1,"message":"136","line":14,"column":20,"nodeType":"134","messageId":"135","endLine":14,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":23,"column":25,"nodeType":"134","messageId":"135","endLine":23,"endColumn":27},{"ruleId":"132","severity":1,"message":"133","line":24,"column":23,"nodeType":"134","messageId":"135","endLine":24,"endColumn":25},{"ruleId":"137","severity":1,"message":"138","line":30,"column":41,"nodeType":"139","endLine":30,"endColumn":59},{"ruleId":"137","severity":1,"message":"138","line":81,"column":17,"nodeType":"139","endLine":88,"endColumn":19},{"ruleId":"137","severity":1,"message":"138","line":30,"column":15,"nodeType":"139","endLine":33,"endColumn":17},{"ruleId":"137","severity":1,"message":"138","line":36,"column":15,"nodeType":"139","endLine":39,"endColumn":17},{"ruleId":"140","severity":1,"message":"141","line":2,"column":17,"nodeType":"142","messageId":"143","endLine":2,"endColumn":26},{"ruleId":"140","severity":1,"message":"144","line":15,"column":11,"nodeType":"142","messageId":"143","endLine":15,"endColumn":15},{"ruleId":"140","severity":1,"message":"145","line":2,"column":8,"nodeType":"142","messageId":"143","endLine":2,"endColumn":10},{"ruleId":"140","severity":1,"message":"141","line":1,"column":17,"nodeType":"142","messageId":"143","endLine":1,"endColumn":26},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'io' is defined but never used.","no-global-assign","no-unsafe-negation"]